<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--开启spring的注解驱动扫描包-->
    <context:component-scan base-package="cn.mdl.*"></context:component-scan>
    <!--让spring管理db.properties文件-->
    <bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:db.properties"></property>
    </bean>

    <!--使用spring配置数据源，dbcp  /  c3p0-->
    <!--c3p0的配置-->
  <!--  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${driver}"></property>
        <property name="jdbcUrl" value="${url}"></property>
        <property name="user" value="${username}"></property>
        <property name="password" value="${password}"></property>
    </bean>-->

    <bean id="basicDataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${driver}"></property>
        <property name="url" value="${url}"></property>
        <property name="username" value="${username}"></property>
        <property name="password" value="${password}"></property>
    </bean>

    <!--现在把mybatis的创建交由spring管理 ： sqlsessionFactoryBean-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--
         1.需要配置数据源
         2.把映射文件(xml)的加载也交由spring管理
         3.引入mybatis的主配置文件 = sqlMapConfig.xml
     -->
        <property name="dataSource" ref="basicDataSource"></property>
        <property name="mapperLocations" value="classpath*:cn/mdl/mapper/*.xml"></property>
        <property name="configLocation" value="classpath:mySqlConfig.xml"></property>
    </bean>

    <!--加载mapper的接口文件-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.mdl.mapper"></property>
    </bean>
    <!--配置事务管理器-->
    <bean id="tx" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--注入数据源-->
        <property name="dataSource" ref="basicDataSource"></property>
    </bean>

    <!--注解版-->
    <tx:annotation-driven proxy-target-class="true" transaction-manager="tx"></tx:annotation-driven>

    <!--xml版配置实现spring的声明式事务管理-->
    <tx:advice transaction-manager="tx" id="advice">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="get*" propagation="SUPPORTS"/>
            <tx:method name="select*" propagation="SUPPORTS"/>
            <tx:method name="find*" propagation="SUPPORTS"/>
            <tx:method name="*" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>

    <!--指定业务层：切面=>切入点-->
    <aop:config proxy-target-class="true">
        <aop:advisor advice-ref="advice" pointcut="execution(* cn.mdl.service.impl..*.*(..))"></aop:advisor>
    </aop:config>
   
</beans>